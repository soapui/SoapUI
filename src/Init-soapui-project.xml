<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Init" resourceRoot="" soapui-version="4.5.2" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite name="Init"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Init" searchProperties="true" id="e9f78fa5-dbf6-4352-8555-5a4d39a2d209"><con:settings/><con:testStep type="groovy" name="Groovy Script"><con:settings/><con:config><script>import groovy.io.*;
import groovy.swing.SwingBuilder;
import javax.swing.*;
import com.eviware.soapui.support.GroovyUtils.*

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath

//determine projectdir by project.getPath, because GroovyUtils.projectpath does not work at startup
path = groovyUtils.projectPath
s= System.getProperty("file.separator");
settingsPath = path+s;
log.info("path = " + path);
//settingsfiles are stored in projecpath\settings
//settingsPath += "settings" + s;

//only works in versions > 4.0 because of SoapUI.isCommandline()
if(com.eviware.soapui.SoapUI.SOAPUI_VERSION.toString().substring(0,1).toInteger() >= 4){
   if(com.eviware.soapui.SoapUI.isCommandLine()){
      setProperties("environment_default", settingsPath);
   }else{
      openDialog();
   }
}

//Method to set project properties
void setProperties(name, location){
   try{
      //read properties file
      FileInputStream fstream = new FileInputStream(location + name + ".properties");
      DataInputStream ins = new DataInputStream(fstream);
      BufferedReader br = new BufferedReader(new InputStreamReader(ins));
      String strLine;

      //set new properties
      while ((strLine = br.readLine()) != null)   {
         attribute = strLine.split("=");
         project.setPropertyValue(attribute[0],attribute[1]);
         project.getPropertyValue(attribute[0]);
      log.info strLine
      }
      ins.close();
   }catch(Exception e){
   	log.info (e.getMessage());
   	log.info "Something went wrong, but properties seems to have been loaded anyway.Errormessage was: "+e 
      //log.info("No project-properties were set, could not find file for name: " + name + " and location: " + location);
   }
}

//Opens the swing dialog
void openDialog(){
	log.info "openDialog"
   def swingBuilder = new SwingBuilder();
   File[] listOfFiles = new File(settingsPath).listFiles();
   int count, count2;
   def options = [];
   def browser = [];
   for (int i = 0; i &lt; listOfFiles.length; i++) {
      if(listOfFiles[i].getName().contains("environment_")){
         name = listOfFiles[i].getName().replace("environment_","").replace(".properties","");
         options[count]=name;
         log.info name
         count++
      }
//      if(listOfFiles[i].getName().contains("browser_")){
//         name = listOfFiles[i].getName().replace("browser_","").replace(".properties","");
//         browser[count2]=name;
//         count2++;
//      }
   }
   def pane = swingBuilder.optionPane(message:'Environment', selectionValues:options, optionType:JOptionPane.CLOSED_OPTION);
   def dialog = pane.createDialog(null, 'Select an environment (' + project.name + ")");
   dialog.show();
   setProperties("environment_" + pane.getInputValue(), settingsPath);
}</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:setupScript>import groovy.io.*;
import groovy.swing.SwingBuilder;
import javax.swing.*;
import com.eviware.soapui.support.GroovyUtils.*

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def globalProperty = com.eviware.soapui.SoapUI.globalProperties

//determine projectdir by project.getPath, because GroovyUtils.projectpath does not work at startup
path = groovyUtils.projectPath
s= System.getProperty("file.separator");
settingsPath = path+s;
log.info("path = " + path);
//settingsfiles are stored in projecpath\settings
//settingsPath += "settings" + s;

//only works in versions > 4.0 because of SoapUI.isCommandline()
if(com.eviware.soapui.SoapUI.SOAPUI_VERSION.toString().substring(0,1).toInteger() >= 4){
   if(com.eviware.soapui.SoapUI.isCommandLine()){
      setProperties("environment_default", settingsPath);
   }else{
      openDialog();
   }
}

//Method to set project properties
void setProperties(name, location){
   try{
      //read properties file
      FileInputStream fstream = new FileInputStream(location + name + ".properties");
      DataInputStream ins = new DataInputStream(fstream);
      BufferedReader br = new BufferedReader(new InputStreamReader(ins));
      String strLine;

      //set new properties
      while ((strLine = br.readLine()) != null)   {
         attribute = strLine.split("=");
//         project.setPropertyValue(attribute[0],attribute[1]);
globalProperty.setPropertyValue(attribute[0]=attribute[1]);
         project.getPropertyValue(attribute[0]);
      log.info strLine
      }
      ins.close();
   }catch(Exception e){
   	log.info (e.getMessage());
   	log.info "Something went wrong, but properties seems to have been loaded anyway.Errormessage was: "+e 
      //log.info("No project-properties were set, could not find file for name: " + name + " and location: " + location);
   }
}

//Opens the swing dialog
void openDialog(){
	log.info "openDialog"
   def swingBuilder = new SwingBuilder();
   File[] listOfFiles = new File(settingsPath).listFiles();
   int count, count2;
   def options = [];
   def browser = [];
   for (int i = 0; i &lt; listOfFiles.length; i++) {
      if(listOfFiles[i].getName().contains("environment_")){
         name = listOfFiles[i].getName().replace("environment_","").replace(".properties","");
         options[count]=name;
         log.info name
         count++
      }
//      if(listOfFiles[i].getName().contains("browser_")){
//         name = listOfFiles[i].getName().replace("browser_","").replace(".properties","");
//         browser[count2]=name;
//         count2++;
//      }
   }
   def pane = swingBuilder.optionPane(message:'Environment', selectionValues:options, optionType:JOptionPane.CLOSED_OPTION);
   def dialog = pane.createDialog(null, 'Select an environment (' + project.name + ")");
   dialog.show();
   setProperties("environment_" + pane.getInputValue(), settingsPath);
}</con:setupScript><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>